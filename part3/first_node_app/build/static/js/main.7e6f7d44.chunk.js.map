{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","Notification","message","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","Footer","style","color","fontStyle","fontSize","notesToShow","filter","map","find","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","e","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"4KAYeA,EAZF,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,iBACbC,EAAQF,EAAKG,UACjB,qBAAuB,iBACvB,OACE,qBAAIC,UAAU,OAAd,UACGJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAoCC,Q,gBCLtCK,EAAU,aAiBD,EAfA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAVA,SAAAC,GAEX,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAACG,EAAIF,GAEhB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCJ9BK,EAXM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAe,OAAZA,EACQ,KAGP,qBAAKd,UAAU,QAAf,SACKc,KCkGEC,EAnGH,SAACC,GAEX,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,MAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WACRC,IAEGrB,MAAK,SAAAsB,GACJT,EAASS,QAEZ,IAEH,IA8CMC,EAAS,WAMb,OACE,sBAAKC,MANa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACE,uBACA,4GAOAC,EAAcZ,EAClBJ,EACAA,EAAMiB,QAAO,SAAAvC,GAAI,OAAIA,EAAKG,aAE5B,OACE,gCACE,uCACA,cAAC,EAAD,CAAce,QAASU,IACvB,8BACE,yBAAQtB,QAAS,kBAAKqB,GAAYD,IAAlC,kBAAkDA,EAAU,YAAc,WAE5E,6BACGY,EAAYE,KAAI,SAAAxC,GAAI,OAAI,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,iBAAkB,kBA1EtD,SAACc,GAC1B,IAAMf,EAAOsB,EAAMmB,MAAK,SAAAzC,GAAI,OAAIA,EAAKe,KAAOA,KACtC2B,EAAW,2BAAO1C,GAAP,IAAaG,WAAYH,EAAKG,YAE/C4B,EACUhB,EAAG2B,GACVhC,MAAK,SAAAiC,GACJpB,EAASD,EAAMkB,KAAI,SAAAxC,GAAI,OAAIA,EAAKe,KAAOA,EAAKf,EAAO2C,SAEpDC,OAAM,SAAAC,GACLhB,EAAgB,SAAD,OACJ7B,EAAKK,QADD,uBAGfyC,YAAW,WACTjB,EAAgB,QACf,KACHN,EAASD,EAAMiB,QAAO,SAAAvC,GAAI,OAAIA,EAAKe,KAAOA,SA0DuCgC,CAAmB/C,EAAKe,MAArEf,EAAKe,SAE3C,uBAAMiC,SAvDM,SAACC,GACfA,EAAEC,iBACF,IAAMC,EAAa,CACjB9C,QAASmB,EACT4B,MAAM,IAAIC,MAAOC,cACjBnD,UAAWoD,KAAKC,SAAW,IAI7BzB,EACUoB,GACPzC,MAAK,SAAAiC,GACJpB,EAASD,EAAMmC,OAAOd,GACtBlB,EAAW,SA0Cb,UACE,uBAAOiC,MAAOlC,EAASmC,SAnCJ,SAACV,GACxBxB,EAAWwB,EAAEW,OAAOF,UAmChB,wBAAQG,KAAK,SAAb,qBAEF,cAAC5B,EAAD,Q,MChGN6B,IAASC,OACH,cAAC,EAAD,IACJC,SAASC,eAAe,W","file":"static/js/main.7e6f7d44.chunk.js","sourcesContent":["const Note = ({note, toggleImportance}) => {\r\n  const label = note.important\r\n  ? 'make not important' : 'make important'\r\n    return(\r\n      <li className=\"note\">\r\n        {note.content}\r\n        <button onClick={toggleImportance}>{label}</button>\r\n        </li>\r\n    )\r\n  }\r\n\r\n\r\nexport default Note;","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    update\r\n}","const Notification = ({ message }) => {\r\n    if(message === null) {\r\n        return null\r\n    }\r\n    return ( \r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Notification;","import React, {useState, useEffect} from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes'\nimport Notification from './components/Notification'\n\nconst App = (props) => {\n\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find(note => note.id === id)\n    const changedNote = {...note, important: !note.important}\n\n    noteService\n      .update(id,changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' no longer exists`\n        )\n        setTimeout(()=>{\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(note => note.id !== id))\n      })\n    \n  }\n\n  const addNote = (e) => {\n    e.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    }\n    \n\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote),\n        setNewNote('')\n        )\n      })\n\n    \n  }\n\n\n  const handleNoteChange = (e) => {\n    setNewNote(e.target.value)\n  }\n\n  const Footer = () => {\n    const footerStyle = {\n      color: 'green',\n      fontStyle: 'italic',\n      fontSize: 16\n    }\n    return(\n      <div style={footerStyle}>\n        <br />\n        <em>Note App, Department of Computer Science, University of Helsinki 2021 </em>\n      </div>\n    )\n  }\n\n\n\n  const notesToShow = showAll\n  ? notes\n  : notes.filter(note => note.important)\n\n  return(\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={()=> setShowAll(!showAll)}>show {showAll ? 'important' : 'all'}</button>\n      </div>\n      <ul>\n        {notesToShow.map(note => <Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)}/>)}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange}/>\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  )\n}\nexport default App;\n","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(\n      <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}